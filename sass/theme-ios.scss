@import 'mixins.scss';

//
// iOS theme
// Visuals and interactions in the style of iOS
//
// --------------------------------------------------


// Variables
// --------------------------------------------------

// Colors
//
// Main theme colors
$primary-color:  #007aff !global;
$chrome-color:   rgba(247, 247, 247, .98) !global;

// Action colors
$default-color:  #929292 !global;
$positive-color: #4cd964 !global;
$negative-color: #dd524d !global;

// Bars
$bar-base-height: 44px !global;
$bar-tab-height:  50px !global;

// iOS style transitions
$timing-fuction: cubic-bezier(.1, .5, .1, 1) !global; // Inspired by @c2prods


// Base
// --------------------------------------------------

// Universal link styling
a {
  color: $primary-color;

  &:active {
    color: darken($primary-color, 10%);
  }
}

// Content
.content {
  background-color: #efeff4;

  // Push styles
  // --------------------------------------------------
  // Fade animation
  &.fade {
    @include transition(opacity .2s ease-in-out);
  }

  // Slide animation
  &.sliding {
    @include transition-timing-function ($timing-fuction);

    // Adding the overlay
    &.sliding-in,
    &.right:not([class*="sliding-in"]) {
      @include animation-name(fadeOverlay);
      @include animation-duration(.4s);
    }

    &.right:not([class*="sliding-in"]) {
      @include animation-direction(reverse);
    }

    &.left {
      @include transform(translate3d(-20%, 0, 0)); // Creates the parallax effect
    }
  }
}



// Typography
// --------------------------------------------------

.h5,
h5,
.h6,
h6,
p {
  color: #8f8f94;
}

.h5,
h5,
.h6,
h6 {
  font-weight: normal;
  text-transform: uppercase;
}


// Buttons
// --------------------------------------------------

.btn {
  background-color: $chrome-color;
  border: 1px solid $default-color;
  color: $default-color;
  @include transition(all);
  @include transition-duration(.2s);
  @include transition-timing-function(linear);

  // Active & filled button styles
  &:active,
  &.active {
    background-color: $default-color;
    color: #fff;
  }

  // Buttons with badges
  .badge {
    background-color: rgba(0, 0, 0, .15);

    &.badge-inverted {
      background-color: transparent;
    }
  }

  // Active states
  &:active .badge {
    color: #fff;
  }
}


// Other button types
// --------------------------------------------------

// Primary button (Default color is blue)
.btn-primary {
  background-color: $primary-color;
  border: 1px solid $primary-color;
  color: #fff;

  &:active,
  &.active {
    background-color: darken($primary-color, 10%);
    border: 1px solid darken($primary-color, 10%);
  }
}

// Positive button (Default color is green)
.btn-positive {
  background-color: $positive-color;
  border: 1px solid $positive-color;
  color: #fff;

  &:active,
  &.active {
    background-color: darken($positive-color, 10%);
    border: 1px solid darken($positive-color, 10%);
  }
}

// Negative button (Default color is red)
.btn-negative {
  background-color: $negative-color;
  border: 1px solid $negative-color;
  color: #fff;

  &:active,
  &.active {
    background-color: darken($negative-color, 10%);
    border: 1px solid darken($negative-color, 10%);
  }
}

// Outlined buttons
.btn-outlined {
  background-color: transparent;

  &.btn-primary {
    color: $primary-color;
  }

  &.btn-positive {
    color: $positive-color;
  }

  &.btn-negative {
    color: $negative-color;
  }

  // Active states
  &.btn-primary:active,
  &.btn-positive:active,
  &.btn-negative:active {
    color: #fff;
  }
}

// Link button (Buttons that look like links)
.btn-link {
  background-color: transparent;
  border: 0;
  color: $primary-color;

  &:active,
  &.active {
    background-color: transparent;
    color: darken($primary-color, 10%);
  }
}


// Bars
// --------------------------------------------------

// Default bar
.bar {
  background-color: $chrome-color;
  border-bottom: 0;
  @include box-shadow(0 0 1px rgba(0, 0, 0, .85));

  // Modifier class to dock any bar below .bar-nav
  &.bar-header-secondary {
    top: $bar-base-height;
  }

  // Modifier class to dock any bar above a standard bar
  &.bar-footer-secondary {
    bottom: $bar-base-height;
  }

  // Modifier class to dock any bar above a .bar-tab
  &.bar-footer-secondary-tab {
    bottom: $bar-tab-height;
  }

  // Give the footers the correct border
  &.bar-footer,
  &.bar-footer-secondary,
  &.bar-footer-secondary-tab {
    border-top: 0;
  }
}

// Tab bar
.bar-tab {
  border-top: 0;
}

.tab-item {
  color: #929292;

  // Active states for the tab bar
  &.active,
  &:active {
    color: $primary-color;
  }
}

// Nav bars with buttons
.bar-nav {
  // Link buttons in nav bars
  .btn-link {
    color: $primary-color;

    &:active {
      color: $primary-color;
      opacity: .6;
    }
  }
}



// Badges
// --------------------------------------------------

.badge {
  &.badge-inverted {
    background-color: transparent;
    color: $default-color;
  }
}


// Badge modifiers
//
// Main badge
.badge-primary {
  background-color: $primary-color;
  color: #fff;

  &.badge-inverted {
    background-color: transparent;
    color: $primary-color;
  }
}

// Positive badge
.badge-positive {
  background-color: $positive-color;
  color: #fff;

  &.badge-inverted {
    background-color: transparent;
    color: $positive-color;
  }
}

// Negative badge
.badge-negative {
  background-color: $negative-color;
  color: #fff;

  &.badge-inverted {
    background-color: transparent;
    color: $negative-color;
  }
}


// Cards
// --------------------------------------------------

// Cards with table-views
.card .table-view {
  background-image: none;
}

.card .table-view-cell:last-child {
  background-image: none;
}

// Table views
// --------------------------------------------------

.table-view {
  border-bottom: 0;
  border-top: 0;
  @include hairline(double, #c8c7cc, 0); // Double grey border.

  .table-view-cell {
    border-bottom: 0;
    @include hairline(single, #c8c7cc, 15px); // Single grey border with 15px offset.

    // Remove the border from the last table view item
    &:last-child {
      background-image: none;
    }

    > a:not(.btn):active {
      color: inherit;
    }
  }

  // Table view dividers
  .table-view-divider {
    border-bottom: 0;
    border-top: 0;
    @include hairline(double, #c8c7cc, 0);  // Double (top and bottom) grey border with no offset.
  }
}


// Forms
// --------------------------------------------------

select,
textarea,
input[type="text"],
input[type="search"],
input[type="password"],
input[type="datetime"],
input[type="datetime-local"],
input[type="date"],
input[type="month"],
input[type="time"],
input[type="week"],
input[type="number"],
input[type="email"],
input[type="url"],
input[type="tel"],
input[type="color"],
.input-group {
  border: 1px solid rgba(0, 0, 0, .2);
  height: 40px;
  padding: 10px 15px;
}

// Rounded search input
input[type="search"] {
  background-color: rgba(0, 0, 0, .1);
  border: 0;
  border-radius: 6px;
  height: 34px;
  text-align: center;
}

input[type="search"]:focus {
  text-align: left;
}

select,
textarea,
.input-group {
  height: auto;
}

// Input groups (cluster multiple inputs together into a single group)
// -------------------------------------------------------------------
.input-group {
  border: 0;
  padding: 0;
  @include hairline(double, #c8c7cc, 0); // Double grey border.
  input {
    border: 0;
    @include hairline(single, #c8c7cc, 15px);
  }

  // Remove bottom border on last input to avoid double bottom border
  input:last-child {
    background-image: none;
  }
}

// Input groups with labels
// --------------------------------------------------

// To use labels with input groups, wrap a label and an input in an .input-row
.input-row {
  border-bottom: 0;
  @include hairline(single, #c8c7cc, 15px); // Single grey border with a 15px offset.
}

// Remove bottom border on last input-row to avoid double bottom border
.input-row:last-child,
.input-row label + input {
  background-image: none;
}


// Segmented controls
// --------------------------------------------------

.segmented-control {
  background-color: transparent;
  border: 1px solid $default-color;

  .control-item {
    border-color: $default-color;
    color: $default-color;
    @include transition(background-color .1s linear);

    &:active {
      background-color: lighten($default-color, 35%);
    }

    &.active {
      background-color: $default-color;
      color: #fff;
    }
  }
}

// Other segmented controller types
//
// Primary
.segmented-control-primary {
  border: 1px solid $primary-color;

  .control-item {
    border-color: inherit;
    color: $primary-color;

    &:active {
      background-color: lighten($primary-color, 35%);
    }

    &.active {
      background-color: $primary-color;
      color: #fff;
    }
  }
}

// Positive
.segmented-control-positive {
  border: 1px solid $positive-color;

  .control-item {
    border-color: inherit;
    color: $positive-color;

    &:active {
      background-color: lighten($positive-color, 35%);
    }

    &.active {
      background-color: $positive-color;
      color: #fff;
    }
  }
}

// Negative
.segmented-control-negative {
  border: 1px solid $negative-color;

  .control-item {
    border-color: inherit;
    color: $negative-color;

    &:active {
      background-color: lighten($negative-color, 35%);
    }

    &.active {
      background-color: $negative-color;
      color: #fff;
    }
  }
}


// Popovers
// --------------------------------------------------

.popover {
  border-radius: 12px;
  @include transition(-webkit-transform .2s ease-in-out, opacity .2s ease-in-out);

  &:before {
    border-bottom: 15px solid $chrome-color;
  }

  // Popovers with `bar`
  .bar {
    @include box-shadow(none);
  }

  // Popovers with `bar-nav`
  .bar-nav {
    border-bottom: 1px solid rgba(0, 0, 0, .15);
  }

  // Popovers with `table-views`
  .table-view {
    background-image: none;
    border-radius: 12px;
  }
}


// Modal styles
// --------------------------------------------------

.modal {
  @include transition-timing-function($timing-fuction);

  // Active modal
  &.active {
    @include transition-timing-function($timing-fuction);
  }
}


// Toggles styles
// --------------------------------------------------
.toggle {
  border: 2px solid #e6e6e6;
  width: 47px;
  @include box-shadow(inset 0 0 0 0 #e1e1e1);
  @include transition-property(box-shadow, border);
  @include transition-duration(.2s);

  // Sliding handle
  .toggle-handle {
    border: 1px solid rgba(0, 0, 0, .2);
    -moz-transition-property: -moz-transform, border, width;
    -webkit-transition-property: -webkit-transform, border, width;
    transition-property: transform, border, width;
    @include box-shadow(0 3px 3px rgba(0, 0, 0, .08));
  }

  &:before {
    display: none;
  }

  // Active state for toggle
  &.active {
    background-color: transparent;
    border: 2px solid $positive-color;
    @include box-shadow(inset 0 0 0 13px $positive-color);

    .toggle-handle {
      @include transform(translate3d(17px, 0, 0));
      border-color: $positive-color;
    }
  }
}


// Overlay animation for the slide transition
@at-root {
  @-webkit-keyframes fadeOverlay {
    from {
      @include box-shadow(0 0 10px rgba(0, 0, 0, 0), -320px 0 0 rgba(0, 0, 0, 0));
    }

    to {
      @include box-shadow(0 0 10px rgba(0, 0, 0, .3), -320px 0 0 rgba(0, 0, 0, .1));
    }
  }
}
